<?xml version="1.0" encoding="UTF-8"?>
<dublin_core schema="dc">
      <dcvalue element="creator" qualifier="none">Deering, Stephen Edward</dcvalue>
      <dcvalue element="date" qualifier="issued">1982</dcvalue>
      <dcvalue element="degree" qualifier="campus" lang="en">UBCV</dcvalue>
      <dcvalue element="degree" qualifier="discipline" lang="en">Computer Science</dcvalue>
      <dcvalue element="degree" qualifier="grantor" lang="en">University of British Columbia</dcvalue>
      <dcvalue element="degree" qualifier="name" lang="en">Master of Science - MSc</dcvalue>
      <dcvalue element="description" qualifier="abstract" lang="en">Modern communication protocols present the software designer with problems of asynchrony, real-time response, high throughput, robust exception handling, and multi-level interfacing. An operating system which provides lightweight processes and inexpensive inter-process communication offers solutions to all of these problems. This thesis examines the use of the multi-process structuring facilities of one such operating system, Verex, to implement the protocols defined by CCITT Recommendation X.25. The success of the multi-process design is confirmed by a working implementation that has linked a Verex system to the Datapac public network for over a year.The processes which make up the Verex X.25 software are organized into layers according to the layered definition of X.25. Within the layers, some processes take the form of finite-state machines which execute the state transitions specified in the protocol definition. Matching the structure of the software to the structure of the specification results in software which is easy to program, easy to understand, and likely to be correct.Multi-process structuring can be applied with similar benefits to protocols other than X.25 and systems other than Verex.</dcvalue>
      <dcvalue element="description" qualifier="affiliation">Science, Faculty of||Computer Science, Department of</dcvalue>
      <dcvalue element="description" qualifier="scholarlevel" lang="en">Graduate</dcvalue>
      <dcvalue element="identifier" qualifier="uri">http://hdl.handle.net/2429/23133</dcvalue>
      <dcvalue element="language" qualifier="iso" lang="en">eng</dcvalue>
      <dcvalue element="rights" qualifier="none">For non-commercial purposes only, such as research, private study and education. Additional conditions apply, see Terms of Use https://open.library.ubc.ca/terms_of_use.</dcvalue>
      <dcvalue element="subject" qualifier="none" lang="en">Interface circuits||Software compatibility||Computer interfaces</dcvalue>
      <dcvalue element="title" qualifier="none" lang="en">Multi-process structuring of X.25 software</dcvalue>
      <dcvalue element="type" qualifier="text" lang="en">Thesis/Dissertation</dcvalue>
      <dcvalue element="type" qualifier="none" lang="en">Text</dcvalue>
      <dcvalue element="creator" qualifier="none">http://id.loc.gov/authorities/names/no2017090017</dcvalue>
   </dublin_core>
