# rewrite the query loader so templates get loaded from here, mappings get imported from the triplestore, queries get written to json

[
	{
		"fedora": [
			{"construct": "fedora:created ?created ;", "where": "OPTIONAL { ?resource fedora:created ?created } . FILTER (?created!='') } ."},
			{"construct": "fedora:createdBy ?createdBy ;", "where": "OPTIONAL { ?resource fedora:createdBy ?createdBy } . FILTER (?createdBy!='') } ."},
			{"construct": "fedora:digest ?digest ;", "where": "OPTIONAL { ?resource fedora:digest ?digest } . FILTER (?digest!='') } ."},
			{"construct": "fedora:exportsAs ?exportsAs ;", "where": "OPTIONAL { ?resource fedora:exportsAs ?exportsAs } . FILTER (?exportsAs!='') } ."},
			{"construct": "fedora:hasFixityService ?hasFixityService ;", "where": "OPTIONAL { ?resource fedora:hasFixityService ?hasFixityService } . FILTER (?hasFixityService!='') } ."},
			{"construct": "fedora:hasParent ?hasParent ;", "where": "OPTIONAL { ?resource fedora:hasParent ?hasParent } . FILTER (?hasParent!='') } ."},
			{"construct": "fedora:hasVersions ?hasVersions ;", "where": "OPTIONAL { ?resource fedora:hasVersions ?hasVersions } . FILTER (?hasVersions!='') } ."},
			{"construct": "fedora:lastModified ?lastModified ;", "where": "OPTIONAL { ?resource fedora:lastModified ?lastModified } . FILTER (?lastModified!='') } ."},
			{"construct": "fedora:lastModifiedBy ?lastModifiedBy ;", "where": "OPTIONAL { ?resource fedora:lastModifiedBy ?lastModifiedBy } . FILTER (?lastModifiedBy!='') } ."},
			{"construct": "fedora:mimeType ?mimeType ;", "where": "OPTIONAL { ?resource fedora:mimeType ?mimeType } . FILTER (?mimeType!='') } ."},
			{"construct": "fedora:mixinTypes ?mixinTypes ;", "where": "OPTIONAL { ?resource fedora:mixinTypes ?mixinTypes } . FILTER (?mixinTypes!='') } ."},
			{"construct": "fedora:primaryType ?primaryType ;", "where": "OPTIONAL { ?resource fedora:primaryType ?primaryType } . FILTER (?primaryType!='') } ."},
			{"construct": "fedora:uuid ?uuid ;", "where": "OPTIONAL { ?resource fedora:uuid ?uuid } . FILTER (?uuid!='') } ."},
			{"construct": "fedora:writable ?writable ;", "where": "OPTIONAL { ?resource fedora:writable ?writable } . FILTER (?writable!='') } ."},
			{"construct": "info:downloadFilename ?downloadFilename ;", "where": "OPTIONAL { ?resource info:downloadFilename ?downloadFilename } . FILTER (??downloadFilename !='') } ."}
		],
		"generic": [
			{"construct": "scholar:onBehalfOf ?onBehalfOf ;", "where": "OPTIONAL { ?resource scholar:onBehalfOf ?onBehalfOf } . FILTER (?onBehalfOf!='') } ."},
			{"construct": "scholar:proxyDepositor ?proxyDepositor ;", "where": "OPTIONAL { ?resource scholar:proxyDepositor ?proxyDepositor } . FILTER (?proxyDepositor!='') } ."},
			{"construct": "scholar:relativePath ?relativePath ;", "where": "OPTIONAL { ?resource scholar:relativePath ?relativePath } . FILTER (?relativePath!='') } ."},
			{"construct": "ual:parentCommunityId ?belongsToCommunity ;", "where": "OPTIONAL { ?resource ualids:belongsToCommunity ?belongsToCommunity } . FILTER (?belongsToCommunity!='') } ."},
			{"construct": "ual:parentCollectionTitle ?hasCollection ;", "where": "OPTIONAL { ?resource ualids:hasCollection ?hasCollection } . FILTER (?hasCollection!='') } ."},
			{"construct": "pcdm:memberOf ?hasCollectionId ;", "where": "OPTIONAL { ?resource ualids:hasCollectionId ?hasCollectionId } . FILTER (?hasCollectionId!='') } ."},
			{"construct": "ualids:ingestbatch ?ingestbatch ;", "where": "OPTIONAL { ?resource ualids:ingestbatch ?ingestbatch } . FILTER (?ingestbatch!='') } ."},
			{"construct": "ual:parentCommunityId ?belongsToCommunity ;", "where": "OPTIONAL { ?resource ualid:belongsToCommunity ?belongsToCommunity } . FILTER (?belongsToCommunity!='') } ."},
			{"construct": "ual:parentCollectionTitle ?hasCollection ;", "where": "OPTIONAL { ?resource ualid:hasCollection ?hasCollection } . FILTER (?hasCollection!='') } ."},
			{"construct": "pcdm:memberOf ?hasCollectionId ;", "where": "OPTIONAL { ?resource ualid:hasCollectionId ?hasCollectionId } . FILTER (?hasCollectionId!='') } ."},
			{"construct": "ualids:ingestbatch ?ingestbatch ;", "where": "OPTIONAL { ?resource ualid:ingestbatch ?ingestbatch } . FILTER (?ingestbatch!='') } ."},
			{"construct": "ual:parentCommunityId ?belongsToCommunity ;", "where": "OPTIONAL { ?resource ual:belongsToCommunity ?belongsToCommunity } . FILTER (?belongsToCommunity!='') } ."},
			{"construct": "ual:parentCollectionTitle ?hasCollection ;", "where": "OPTIONAL { ?resource ual:hasCollection ?hasCollection } . FILTER (?hasCollection!='') } ."},
			{"construct": "pcdm:memberOf ?hasCollectionId ;", "where": "OPTIONAL { ?resource ual:hasCollectionId ?hasCollectionId } . FILTER (?hasCollectionId!='') } ."},
			{"construct": "ualids:ingestbatch ?ingestbatch ;", "where": "OPTIONAL { ?resource ual:ingestbatch ?ingestbatch } . FILTER (?ingestbatch!='') } ."}
		],
		"thesis": [
			{"construct": "acl:embargoHistory ?embargoHistory ;", "where": "OPTIONAL { ?resource acl:embargoHistory ?embargoHistory } . FILTER (?embargoHistory!='') } ."},
			{"construct": "acl:embargoReleaseDate ?embargoReleaseDate ;", "where": "OPTIONAL { ?resource acl:embargoReleaseDate ?embargoReleaseDate } . FILTER (?embargoReleaseDate!='') } ."},
			{"construct": "acl:hasEmbargo ?hasEmbargo ;", "where": "OPTIONAL { ?resource acl:hasEmbargo ?hasEmbargo } . FILTER (?hasEmbargo!='') } ."},
			{"construct": "acl:visibilityAfterEmbargo ?visibilityAfterEmbargo ;", "where": "OPTIONAL { ?resource acl:visibilityAfterEmbargo ?visibilityAfterEmbargo } . FILTER (?visibilityAfterEmbargo!='') } ."},
			{"construct": "acl:visibilityDuringEmbargo ?visibilityDuringEmbargo ;", "where": "OPTIONAL { ?resource acl:visibilityDuringEmbargo ?visibilityDuringEmbargo } . FILTER (?visibilityDuringEmbargo!='') } ."},
			{"construct": "ual:parentCommunityId ?belongsToCommunity ;", "where": "OPTIONAL { ?resource ualids:belongsToCommunity ?belongsToCommunity } . FILTER (?belongsToCommunity!='') } ."},
			{"construct": "ual:parentCollectionTitle ?hasCollection ;", "where": "OPTIONAL { ?resource ualids:hasCollection ?hasCollection } . FILTER (?hasCollection!='') } ."},
			{"construct": "pcdm:memberOf ?hasCollectionId ;", "where": "OPTIONAL { ?resource ualids:hasCollectionId ?hasCollectionId } . FILTER (?hasCollectionId!='') } ."},
			{"construct": "ualids:ingestbatch ?ingestbatch ;", "where": "OPTIONAL { ?resource ualids:ingestbatch ?ingestbatch } . FILTER (?ingestbatch!='') } ."},
			{"construct": "ual:parentCommunityId ?belongsToCommunity ;", "where": "OPTIONAL { ?resource ualid:belongsToCommunity ?belongsToCommunity } . FILTER (?belongsToCommunity!='') } ."},
			{"construct": "ual:parentCollectionTitle ?hasCollection ;", "where": "OPTIONAL { ?resource ualid:hasCollection ?hasCollection } . FILTER (?hasCollection!='') } ."},
			{"construct": "pcdm:memberOf ?hasCollectionId ;", "where": "OPTIONAL { ?resource ualid:hasCollectionId ?hasCollectionId } . FILTER (?hasCollectionId!='') } ."},
			{"construct": "ualids:ingestbatch ?ingestbatch ;", "where": "OPTIONAL { ?resource ualid:ingestbatch ?ingestbatch } . FILTER (?ingestbatch!='') } ."},
			{"construct": "ual:parentCommunityId ?belongsToCommunity ;", "where": "OPTIONAL { ?resource ual:belongsToCommunity ?belongsToCommunity } . FILTER (?belongsToCommunity!='') } ."},
			{"construct": "ual:parentCollectionTitle ?hasCollection ;", "where": "OPTIONAL { ?resource ual:hasCollection ?hasCollection } . FILTER (?hasCollection!='') } ."},
			{"construct": "pcdm:memberOf ?hasCollectionId ;", "where": "OPTIONAL { ?resource ual:hasCollectionId ?hasCollectionId } . FILTER (?hasCollectionId!='') } ."},
			{"construct": "ualids:ingestbatch ?ingestbatch ;", "where": "OPTIONAL { ?resource ual:ingestbatch ?ingestbatch } . FILTER (?ingestbatch!='') } ."},
			{"construct": "scholar:relativePath ?relativePath ;", "where": "OPTIONAL { ?resource scholar:relativePath ?relativePath } . FILTER (?relativePath!='') } ."}
		]
	}
]